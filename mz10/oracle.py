import sys

answers = {
    'without_symbols': '\xf2\xa4`\xed\xcf\x06TQ\x99\xf4\xdc\x8c\xcd\xfe\xa6)\x91\x15\x95u\xca\xbb\x1a\x9f\xfa\xaah\x02\xfa\xb2\xb1\x14\xca\xce\xb4\x1d\xf9k\xafQ\xe7\x1c\xb30\xf1\x1a\xe8\xb9\x911r\xad\x83\xbd\x81\xf8\x81\xf5\xe8}\xd0\xdc\x99\t\xd2\x1d\xc4\xc6\x82\xc0\xe7\xeb\xd1NU\x9b\xd6\x14\xc4\xb7\x85\xbfe\x90',
    'flaky': 'vN*\x02K\xb8*_[\xc3FCn\xd9\x06p\r+\xb6Y\rs\x84*t\x17\xdfdxO\xcc \r\xady\xe2n\xe0\xd0)T\xfb\xc4\xf2R\x10\xc3\x97VcF:\x08\x16\xf2a\x01:\xd9\x1aT\xdeg\xaf\x05\xf2\xf2(\x00\xa7x\x86',
    'with_core': '\xd0\x0e\x11\xbbmR\x96%\xf3\xa5\x137f\xcaJ=\xd9\x88\xf1\x15BgW\x8f\xd3`8\x18Y\xa06\xc2\xdfp\x97\xebE\x07T\xb1\xf7\x89\x1c\x03r\xda\x9e$\xae\x8a\xde\x0fs\x18\x1e\xe0\xf4^\x89\xe1r\xd9\x0c\x04\xa1\x03]\xcfs\x18"\x11\xeb',
    'with_symbols': '\xb5:t\xc2H\x17k\xac^\xc907\x89|\x80i\xbb|\xa4\x9b\x1e \xa5\xa3^,\x0c\x87\xe0\x82\xcaV\xc9a\x13\xee\x02\x1c\xa1fG)\xad\xeb\x86\x07\x9d\xab\xc0\xaf\xa7\x7fV\xe1\x9a\tC\xbdOc\x81\xdc\x9c\xa9\xc7\xef'
}

def encode(key, s):
    def get_byte(key, i):
        return (key >> (i*8)) & 0xFF
    res = []
    for i, c in enumerate(s):
        res.append(chr(ord(c) ^ get_byte(key, i % 4)))
        key = key * 23768215368242387535 % 2**32
    return "".join(res)

if len(sys.argv) != 3:
    print ("Usage: {} <task-name> <your-guess>".format(sys.argv[0]))
    exit(1)

name = sys.argv[1]
guess = int(sys.argv[2])

if name not in answers:
    print ("No such task {}, valid names are {}".format(name, list(answers.keys())))
    exit(1)

print ("Your (possible) flag is (without quotes): \"{}\"".format(encode(guess, answers[name])))
